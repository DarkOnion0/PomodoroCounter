name: Frontend

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths:
      - "flake.**"
      - "pomolib/**"
      - "frontend/**"
      - ".github/workflows/frontend.yaml"
  pull_request:
    branches: ["main"]
    paths:
      - "flake.**"
      - "pomolib/**"
      - "frontend/**"
      - ".github/workflows/frontend.yaml"

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Prereqs
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v4

      # Restore Cache

      - name: Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@v2

      - name: Restore rust target
        id: cache-rust-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            ./target
            ~/.cargo
          key: ${{ runner.os }}-rust

      - name: Restore frontend
        id: cache-frontend-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            ./frontend/src/wasm/
            ./frontend/node_modules/
            ./frontend/.svelte_kit/
          key: ${{ runner.os }}-frontend

      - name: Install Yarn Deps
        run: |
          cd frontend
          nix develop .#frontend --impure --command bash -c "yarn install"

      # Build

      - name: Build Rust
        run: |
          cd pomolib
          nix develop .#rust --impure --command bash -c "wasm-pack build --profiling --out-dir ../frontend/src/wasm/"

      - name: Build Frontend
        run: |
          cd frontend
          nix develop .#frontend --impure --command bash -c "yarn build"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./frontend/build/

      # Save Cache

      - name: Save rust target
        uses: actions/cache/save@v3
        with:
          path: |
            ./target
            ~/.cargo
          key: ${{ steps.cache-rust-restore.outputs.cache-primary-key }}

      - name: Save frontend target
        uses: actions/cache/save@v3
        with:
          path: |
            ./frontend/src/wasm/
            ./frontend/node_modules/
            ./frontend/.svelte_kit/
          key: ${{ steps.cache-frontend-restore.outputs.cache-primary-key }}

  deploy:
    needs: build
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
