name: Rust

on:
  push:
    branches: ["main"]
    paths:
      - "**.rs"
      - "**.toml"
      - "flake.**"
      - ".github/workflows/rust.yaml"
  pull_request:
    branches: ["main"]
    paths:
      - "**.rs"
      - "**.toml"
      - "flake.**"
      - ".github/workflows/rust.yaml"

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    needs: [test]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        workspace: ["web", "cli"]

    steps:
      # Prereqs
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v4

      # Caching

      - name: Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@v2

      - name: Restore rust target
        id: cache-rust-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            ./target
            ~/.cargo
          key: ${{ runner.os }}-rust

      # Build

      - name: Build
        run: nix develop --impure --command bash -c "cargo build -p ${{ matrix.workspace }} --verbose"

      # Caching

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: x86_64-linux-debug-${{ matrix.workspace }}
          path: ./release.zip

      - name: Save rust target
        uses: actions/cache/save@v3
        with:
          path: |
            ./target
            ~/.cargo
          key: ${{ steps.cache-rust-restore.outputs.cache-primary-key }}

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        workspace: ["web", "cli", "pomolib"]

    steps:
      # Prereq
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v4

      # Caching

      - name: Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@v2

      - name: Restore rust target
        id: cache-rust-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            ./target
            ~/.cargo
          key: ${{ runner.os }}-rust

      # Run

      - name: Run tests
        run: nix develop --impure --command bash -c "cargo test -p ${{ matrix.workspace }} --verbose"

      # Caching

      - name: Save rust target
        uses: actions/cache/save@v3
        with:
          path: |
            ./target
            ~/.cargo
          key: ${{ steps.cache-rust-restore.outputs.cache-primary-key }}
